name: Security & Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**/package.json'
      - '**/package-lock.json'

jobs:
  # Security Scanning
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
          cd ../frontend && npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate --json > npm-audit-results.json || true
          cd backend && npm audit --audit-level=moderate --json > ../backend-audit-results.json || true
          cd ../frontend && npm audit --audit-level=moderate --json > ../frontend-audit-results.json || true

      - name: Upload audit results
        uses: actions/upload-artifact@v3
        with:
          name: security-audit-results
          path: |
            npm-audit-results.json
            backend-audit-results.json
            frontend-audit-results.json

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Dependency Updates
  dependency-updates:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Check for outdated dependencies
        run: |
          echo "## Root Dependencies" >> dependency-report.md
          npm outdated --json > root-outdated.json || echo "No outdated root dependencies"
          echo "" >> dependency-report.md

          echo "## Backend Dependencies" >> dependency-report.md
          cd backend && npm outdated --json > ../backend-outdated.json || echo "No outdated backend dependencies"
          cd ..
          echo "" >> dependency-report.md

          echo "## Frontend Dependencies" >> dependency-report.md
          cd frontend && npm outdated --json > ../frontend-outdated.json || echo "No outdated frontend dependencies"
          cd ..

      - name: Generate dependency report
        run: |
          echo "# Dependency Update Report" > dependency-report.md
          echo "Generated on: $(date)" >> dependency-report.md
          echo "" >> dependency-report.md

          if [ -f root-outdated.json ] && [ "$(cat root-outdated.json | jq length)" -gt 0 ]; then
            echo "## Root Dependencies" >> dependency-report.md
            echo "\`\`\`json" >> dependency-report.md
            cat root-outdated.json >> dependency-report.md
            echo "\`\`\`" >> dependency-report.md
            echo "" >> dependency-report.md
          fi

          if [ -f backend-outdated.json ] && [ "$(cat backend-outdated.json | jq length)" -gt 0 ]; then
            echo "## Backend Dependencies" >> dependency-report.md
            echo "\`\`\`json" >> dependency-report.md
            cat backend-outdated.json >> dependency-report.md
            echo "\`\`\`" >> dependency-report.md
            echo "" >> dependency-report.md
          fi

          if [ -f frontend-outdated.json ] && [ "$(cat frontend-outdated.json | jq length)" -gt 0 ]; then
            echo "## Frontend Dependencies" >> dependency-report.md
            echo "\`\`\`json" >> dependency-report.md
            cat frontend-outdated.json >> dependency-report.md
            echo "\`\`\`" >> dependency-report.md
            echo "" >> dependency-report.md
          fi

      - name: Upload dependency report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-report
          path: dependency-report.md

  # Automated PR for Dependency Updates
  create-update-pr:
    name: Create Dependency Update PR
    runs-on: ubuntu-latest
    needs: [dependency-updates]
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Update root dependencies
        run: npm update

      - name: Update backend dependencies
        run: cd backend && npm update

      - name: Update frontend dependencies
        run: cd frontend && npm update

      - name: Run tests to ensure updates don't break anything
        run: |
          cd backend && npm test
          cd ../frontend && npm test

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            chore: update dependencies

            - Updated root dependencies
            - Updated backend dependencies
            - Updated frontend dependencies

            All tests pass âœ…
          title: 'chore: update dependencies'
          body: |
            ## Dependency Updates

            This PR updates project dependencies to their latest compatible versions.

            ### Changes
            - Root dependencies updated
            - Backend dependencies updated
            - Frontend dependencies updated

            ### Testing
            - All backend tests pass
            - All frontend tests pass

            ### Checklist
            - [x] Tests pass
            - [x] No breaking changes
            - [x] Dependencies are compatible
          branch: automated/dependency-updates
          delete-branch: true
          labels: |
            dependencies
            automated